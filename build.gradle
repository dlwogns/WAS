plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.hyodore'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

ext {
    snippetsDir = file('build/generated-snippets')
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Spring Integration
    implementation 'org.springframework.boot:spring-boot-starter-integration'
    // Spring integration MQTT
    implementation "org.springframework.integration:spring-integration-mqtt:6.4.3"
    // Spring kafka
    implementation 'org.springframework.kafka:spring-kafka'

    // Spring Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    //guava
    implementation "com.google.guava:guava:33.3.0-jre"
    implementation platform("io.awspring.cloud:spring-cloud-aws-dependencies:3.3.0")
    // Replace the following with the starter dependencies of specific modules you wish to use
    implementation 'io.awspring.cloud:spring-cloud-aws-starter'
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3'

    //AOP
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // Test
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:3.0.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //FCM
    implementation 'com.google.firebase:firebase-admin:9.2.0'

}


test {
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
    outputDir = file("src/main/resources/static/docs")
    attributes 'snippets': snippetsDir
    doFirst {
        delete outputDir
    }
}

build {
    dependsOn asciidoctor
}

tasks.named('test') {
    useJUnitPlatform()
}
